-- Table to store Organization Units
CREATE TABLE ORGANIZATION_UNIT (
    ID              INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    OU_ID           VARCHAR(36) UNIQUE NOT NULL,
    PARENT_ID       VARCHAR(36),
    HANDLE          VARCHAR(50)        NOT NULL,
    NAME            VARCHAR(50)        NOT NULL,
    DESCRIPTION     VARCHAR(255),
    CREATED_AT      TIMESTAMPTZ DEFAULT NOW(),
    UPDATED_AT      TIMESTAMPTZ DEFAULT NOW(),
    FOREIGN KEY (PARENT_ID) REFERENCES ORGANIZATION_UNIT (OU_ID) ON DELETE CASCADE
);

-- Table to store Users
CREATE TABLE "USER" (
    ID          INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    USER_ID     VARCHAR(36) UNIQUE NOT NULL,
    OU_ID       VARCHAR(36)        NOT NULL,
    TYPE        VARCHAR(50)        NOT NULL,
    ATTRIBUTES  JSONB,
    CREDENTIALS JSONB,
    CREATED_AT  TIMESTAMPTZ DEFAULT NOW(),
    UPDATED_AT  TIMESTAMPTZ DEFAULT NOW()
);

-- Table to store Groups
CREATE TABLE "GROUP" (
    ID              INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    GROUP_ID        VARCHAR(36) UNIQUE NOT NULL,
    OU_ID           VARCHAR(36)        NOT NULL,
    NAME            VARCHAR(50)        NOT NULL,
    DESCRIPTION     VARCHAR(255),
    CREATED_AT      TIMESTAMPTZ DEFAULT NOW(),
    UPDATED_AT      TIMESTAMPTZ DEFAULT NOW()
);

-- Table to store Group member assignments
CREATE TABLE GROUP_MEMBER_REFERENCE (
    ID          INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    GROUP_ID    VARCHAR(36) NOT NULL,
    MEMBER_TYPE VARCHAR(7)  NOT NULL,
    MEMBER_ID   VARCHAR(36) NOT NULL,
    CREATED_AT  TIMESTAMPTZ DEFAULT NOW(),
    UPDATED_AT  TIMESTAMPTZ DEFAULT NOW(),
    FOREIGN KEY (GROUP_ID) REFERENCES "GROUP" (GROUP_ID) ON DELETE CASCADE
);

-- Table to store basic service provider (app) details.
CREATE TABLE SP_APP (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    APP_ID VARCHAR(36) UNIQUE NOT NULL,
    APP_NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(50) NOT NULL,
    AUTH_FLOW_GRAPH_ID VARCHAR(50) NOT NULL,
    REGISTRATION_FLOW_GRAPH_ID VARCHAR(50) NOT NULL,
    IS_REGISTRATION_FLOW_ENABLED CHAR(1) DEFAULT '1',
    APP_JSON JSONB
);

-- Table to store OAuth configurations for SP apps.
CREATE TABLE IDN_OAUTH_CONSUMER_APPS (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    CONSUMER_KEY VARCHAR(255) NOT NULL,
    CONSUMER_SECRET VARCHAR(255) NOT NULL,
    APP_ID VARCHAR(36) NOT NULL REFERENCES SP_APP(APP_ID) ON DELETE CASCADE,
    CALLBACK_URIS VARCHAR(500),
    GRANT_TYPES VARCHAR(255),
    RESPONSE_TYPES VARCHAR(255),
    TOKEN_ENDPOINT_AUTH_METHODS VARCHAR(255)
);

-- Table to store inbound auth configs (e.g., OAuth, SAML) for SP apps.
CREATE TABLE SP_INBOUND_AUTH (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    INBOUND_AUTH_KEY VARCHAR(255) NOT NULL,
    INBOUND_AUTH_TYPE VARCHAR(50) NOT NULL,
    APP_ID VARCHAR(36) NOT NULL REFERENCES SP_APP(APP_ID) ON DELETE CASCADE
);

-- Table to store allowed origins for OAuth apps.
CREATE TABLE IDN_OAUTH_ALLOWED_ORIGINS (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ALLOWED_ORIGINS VARCHAR(500) NOT NULL UNIQUE
);

-- Table to store identity providers.
CREATE TABLE IDP (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    IDP_ID VARCHAR(36) UNIQUE NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(500),
    CREATED_AT TIMESTAMPTZ DEFAULT NOW(),
    UPDATED_AT TIMESTAMPTZ DEFAULT NOW()
);

-- Table to store identity provider properties.
CREATE TABLE IDP_PROPERTY (
    IDP_ID VARCHAR(36) NOT NULL REFERENCES IDP(IDP_ID) ON DELETE CASCADE,
    PROPERTY_NAME VARCHAR(255) NOT NULL,
    PROPERTY_VALUE VARCHAR(500) NOT NULL,
    IS_SECRET CHAR(1) DEFAULT '0',
    PRIMARY KEY (IDP_ID, PROPERTY_NAME)
);

-- Table to store notification senders.
CREATE TABLE NOTIFICATION_SENDER (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    SENDER_ID VARCHAR(36) UNIQUE NOT NULL,
    DESCRIPTION VARCHAR(500),
    TYPE VARCHAR(20) NOT NULL,
    PROVIDER VARCHAR(20) NOT NULL,
    CREATED_AT TIMESTAMPTZ DEFAULT NOW(),
    UPDATED_AT TIMESTAMPTZ DEFAULT NOW()
);

-- Table to store notification sender properties.
CREATE TABLE NOTIFICATION_SENDER_PROPERTY (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    SENDER_ID VARCHAR(36) NOT NULL REFERENCES NOTIFICATION_SENDER(SENDER_ID) ON DELETE CASCADE,
    PROPERTY_NAME VARCHAR(255) NOT NULL,
    PROPERTY_VALUE VARCHAR(500),
    IS_SECRET CHAR(1) DEFAULT '0',
    UNIQUE (SENDER_ID, PROPERTY_NAME)
);

-- Table to store certificates associated with various entities.
CREATE TABLE CERTIFICATE (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    CERT_ID VARCHAR(36) UNIQUE NOT NULL,
    REF_TYPE VARCHAR(20) NOT NULL,
    REF_ID VARCHAR(36) NOT NULL,
    TYPE VARCHAR(20) NOT NULL,
    VALUE TEXT NOT NULL,
    CREATED_AT TIMESTAMPTZ DEFAULT NOW(),
    UPDATED_AT TIMESTAMPTZ DEFAULT NOW(),
    UNIQUE (REF_TYPE, REF_ID)
);

-- Insert sample data into the tables.
INSERT INTO SP_APP (APP_NAME, APP_ID, DESCRIPTION, AUTH_FLOW_GRAPH_ID, REGISTRATION_FLOW_GRAPH_ID) VALUES ('Test SPA', '550e8400-e29b-41d4-a716-446655440000', 'Initial testing App', 'auth_flow_config_basic', 'registration_flow_config_basic');

INSERT INTO IDN_OAUTH_CONSUMER_APPS (CONSUMER_KEY, CONSUMER_SECRET, APP_ID, CALLBACK_URIS, GRANT_TYPES)
VALUES ('client123', 'fcf730b6d95236ecd3c9fc2d92d7b6b2bb061514961aec041d6c7a7192f592e4', '550e8400-e29b-41d4-a716-446655440000', 'https://localhost:3000', 'client_credentials,authorization_code,refresh_token');

INSERT INTO SP_INBOUND_AUTH (INBOUND_AUTH_KEY, INBOUND_AUTH_TYPE, APP_ID)
VALUES ('client123', 'oauth2', '550e8400-e29b-41d4-a716-446655440000');

INSERT INTO IDN_OAUTH_ALLOWED_ORIGINS (ALLOWED_ORIGINS) VALUES ('https://localhost:3000,https://localhost:9001,https://localhost:9090');

INSERT INTO "USER" (USER_ID, OU_ID, TYPE, ATTRIBUTES)
VALUES
('550e8400-e29b-41d4-a716-446655440000', '456e8400-e29b-41d4-a716-446655440001', 'person',
'{"age": 30, "roles": ["admin", "user"], "address": {"city": "Colombo", "zip": "00100"}}');

INSERT INTO IDP (IDP_ID, NAME, DESCRIPTION)
VALUES
('550e8400-e29b-41d4-a716-446655440000', 'Local', 'Local Identity Provider'),
('550e8400-e29b-41d4-a716-446655440001', 'Github', 'Login with Github'),
('550e8400-e29b-41d4-a716-446655440002', 'Google', 'Login with Google');

INSERT INTO IDP_PROPERTY (IDP_ID, PROPERTY_NAME, PROPERTY_VALUE, IS_SECRET)
VALUES
('550e8400-e29b-41d4-a716-446655440001', 'client_id', 'client1', '0'),
('550e8400-e29b-41d4-a716-446655440001', 'client_secret', 'secret1', '1'),
('550e8400-e29b-41d4-a716-446655440001', 'redirect_uri', 'https://localhost:3000', '0'),
('550e8400-e29b-41d4-a716-446655440001', 'scopes', 'user:email,read:user', '0'),
('550e8400-e29b-41d4-a716-446655440002', 'client_id', 'client2', '0'),
('550e8400-e29b-41d4-a716-446655440002', 'client_secret', 'secret2', '1'),
('550e8400-e29b-41d4-a716-446655440002', 'redirect_uri', 'https://localhost:3000', '0'),
('550e8400-e29b-41d4-a716-446655440002', 'scopes', 'openid,email,profile', '0');

-- Insert sample organization units
INSERT INTO ORGANIZATION_UNIT (OU_ID, PARENT_ID, HANDLE, NAME, DESCRIPTION)
VALUES
('456e8400-e29b-41d4-a716-446655440001', NULL, 'root', 'Root Organization', 'Root organization unit'),
('456e8400-e29b-41d4-a716-446655440002', '456e8400-e29b-41d4-a716-446655440001', 'engineering', 'Engineering', 'Engineering department'),
('456e8400-e29b-41d4-a716-446655440003', '456e8400-e29b-41d4-a716-446655440001', 'sales', 'Sales', 'Sales department'),
('456e8400-e29b-41d4-a716-446655440004', '456e8400-e29b-41d4-a716-446655440002', 'frontend', 'Frontend Team', 'Frontend development team');
