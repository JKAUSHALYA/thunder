// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package servicemock

import (
	"github.com/asgardeo/thunder/internal/system/healthcheck/model"
	mock "github.com/stretchr/testify/mock"
)

// NewHealthCheckServiceInterfaceMock creates a new instance of HealthCheckServiceInterfaceMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHealthCheckServiceInterfaceMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *HealthCheckServiceInterfaceMock {
	mock := &HealthCheckServiceInterfaceMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// HealthCheckServiceInterfaceMock is an autogenerated mock type for the HealthCheckServiceInterface type
type HealthCheckServiceInterfaceMock struct {
	mock.Mock
}

type HealthCheckServiceInterfaceMock_Expecter struct {
	mock *mock.Mock
}

func (_m *HealthCheckServiceInterfaceMock) EXPECT() *HealthCheckServiceInterfaceMock_Expecter {
	return &HealthCheckServiceInterfaceMock_Expecter{mock: &_m.Mock}
}

// CheckReadiness provides a mock function for the type HealthCheckServiceInterfaceMock
func (_mock *HealthCheckServiceInterfaceMock) CheckReadiness() model.ServerStatus {
	ret := _mock.Called()

	if len(ret) == 0 {
		panic("no return value specified for CheckReadiness")
	}

	var r0 model.ServerStatus
	if returnFunc, ok := ret.Get(0).(func() model.ServerStatus); ok {
		r0 = returnFunc()
	} else {
		r0 = ret.Get(0).(model.ServerStatus)
	}
	return r0
}

// HealthCheckServiceInterfaceMock_CheckReadiness_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CheckReadiness'
type HealthCheckServiceInterfaceMock_CheckReadiness_Call struct {
	*mock.Call
}

// CheckReadiness is a helper method to define mock.On call
func (_e *HealthCheckServiceInterfaceMock_Expecter) CheckReadiness() *HealthCheckServiceInterfaceMock_CheckReadiness_Call {
	return &HealthCheckServiceInterfaceMock_CheckReadiness_Call{Call: _e.mock.On("CheckReadiness")}
}

func (_c *HealthCheckServiceInterfaceMock_CheckReadiness_Call) Run(run func()) *HealthCheckServiceInterfaceMock_CheckReadiness_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *HealthCheckServiceInterfaceMock_CheckReadiness_Call) Return(serverStatus model.ServerStatus) *HealthCheckServiceInterfaceMock_CheckReadiness_Call {
	_c.Call.Return(serverStatus)
	return _c
}

func (_c *HealthCheckServiceInterfaceMock_CheckReadiness_Call) RunAndReturn(run func() model.ServerStatus) *HealthCheckServiceInterfaceMock_CheckReadiness_Call {
	_c.Call.Return(run)
	return _c
}
